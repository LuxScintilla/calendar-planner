{"mappings":"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","sources":["<anon>","src/js/main.js","src/js/modal.js"],"sourcesContent":["\n\"use strict\";\nconst $fa7a60d60ed0fb7b$var$backDrop = document.querySelector(\".modal__backdrop\");\nconst $fa7a60d60ed0fb7b$var$addTaskModal = document.querySelector(\".modal__new-task\");\nconst $fa7a60d60ed0fb7b$var$editTaskModal = document.querySelector(\".modal__edit-task\");\nconst $fa7a60d60ed0fb7b$var$deleteTaskModal = document.querySelector(\".modal__delete-task\");\nconst $fa7a60d60ed0fb7b$var$weatherModal = document.querySelector(\".modal__weather\");\nconst $fa7a60d60ed0fb7b$var$profileModal = document.querySelector(\".modal__profile\");\nconst $fa7a60d60ed0fb7b$var$modalForm = document.querySelector(\".modal__form\");\nconst $fa7a60d60ed0fb7b$var$addTaskInput = document.querySelector(\".modal__task-input\");\nconst $fa7a60d60ed0fb7b$var$usernameInput = document.querySelector(\".username-input\");\nconst $fa7a60d60ed0fb7b$var$locationInput = document.querySelector(\".location-input\");\nconst $fa7a60d60ed0fb7b$var$editContainer = document.querySelector(\".modal__render-edit-container\");\nconst $fa7a60d60ed0fb7b$var$deleteContainer = document.querySelector(\".modal__render-delete-container\");\nconst $fa7a60d60ed0fb7b$var$saveBtn = document.querySelector(\".modal__btn-save\");\nconst $fa7a60d60ed0fb7b$var$profileSaveBtn = document.querySelector(\".modal__btn-profile-save\");\nconst $fa7a60d60ed0fb7b$var$doneBtn = document.querySelectorAll(\".modal__btn-done\");\nconst $fa7a60d60ed0fb7b$var$cancelBtn = document.querySelectorAll(\".modal__btn-cancel\");\nconst $fa7a60d60ed0fb7b$var$okBtn = document.querySelector(\".modal__btn-ok\");\n$fa7a60d60ed0fb7b$var$modalForm.addEventListener(\"keydown\", function(event) {\n    // Stop anything from happening when user presses the enter key\n    if (event.key === \"Enter\") event.preventDefault();\n});\n///////////////////////////////////////////////\n// SAVE BUTTON\n///////////////////////////////////////////////\n$fa7a60d60ed0fb7b$var$saveBtn.addEventListener(\"click\", function(event) {\n    // Object that will be saved into localstorage\n    const dataObject = {\n        taskDate: Number($54b47fc030b7b21e$export$8ab225cdf6be8954),\n        taskMonth: $54b47fc030b7b21e$export$ca000e230c0caa3e.month,\n        taskTitle: $fa7a60d60ed0fb7b$var$addTaskInput.value\n    };\n    // Push object to the end of the main tasks array\n    $54b47fc030b7b21e$export$7191f9b9098a3ea4[$54b47fc030b7b21e$export$7191f9b9098a3ea4.length] = dataObject;\n    localStorage.setItem(\"tasks\", JSON.stringify($54b47fc030b7b21e$export$7191f9b9098a3ea4));\n    $fa7a60d60ed0fb7b$var$backDrop.style.display = \"none\";\n    $fa7a60d60ed0fb7b$var$addTaskModal.style.display = \"none\";\n    // Clear input field\n    $fa7a60d60ed0fb7b$var$addTaskInput.value = \"\";\n    // Render the calendar with the new data\n    $54b47fc030b7b21e$export$2062782c78489ae9();\n});\nconst $fa7a60d60ed0fb7b$export$74fc2f5227cc41bd = function() {\n    $fa7a60d60ed0fb7b$var$backDrop.style.display = \"block\";\n    $fa7a60d60ed0fb7b$var$addTaskModal.style.display = \"flex\";\n    $fa7a60d60ed0fb7b$var$addTaskInput.focus();\n};\nconst $fa7a60d60ed0fb7b$export$316cd9caae89eb91 = function() {\n    // Collects the entire markup to be attached when done\n    let markup = \"\";\n    // Counter for the task numbers when rendering dynamically\n    let i = 1;\n    // Get only the tasks for the day and month you clicked\n    const filtered = $54b47fc030b7b21e$export$7191f9b9098a3ea4.filter((task)=>task.taskDate === Number($54b47fc030b7b21e$export$8ab225cdf6be8954) && task.taskMonth === $54b47fc030b7b21e$export$ca000e230c0caa3e.month);\n    // For each task of selected generate the html markup\n    filtered.forEach((task)=>{\n        markup += `<div class=\"modal__task-container\">\n      <label class=\"modal__task-label--edit\" for=\"task\">Task ${i}:</label>\n      <input class=\"modal__task-input\" name=\"task\" type=\"text\" data-task=${i} value=\"${task.taskTitle}\" autocomplete=\"off\" maxlength=\"30\"\n      readonly>\n      <button class=\"edit-task-btn\" data-task=${i}>Edit</button>\n    </div>`;\n        i++;\n    });\n    $fa7a60d60ed0fb7b$var$editContainer.innerHTML = \"\";\n    $fa7a60d60ed0fb7b$var$editContainer.insertAdjacentHTML(\"afterbegin\", markup);\n    $fa7a60d60ed0fb7b$var$backDrop.style.display = \"block\";\n    $fa7a60d60ed0fb7b$var$editTaskModal.style.display = \"flex\";\n};\nconst $fa7a60d60ed0fb7b$export$dc3d54406d71c4fb = function() {\n    // Collects the entire markup to be attached when done\n    let markup = \"\";\n    // Counter for the task numbers when rendering dynamically\n    let i = 1;\n    // Get only the tasks for the day and month you clicked\n    const filtered = $54b47fc030b7b21e$export$7191f9b9098a3ea4.filter((task)=>task.taskDate === Number($54b47fc030b7b21e$export$8ab225cdf6be8954) && task.taskMonth === $54b47fc030b7b21e$export$ca000e230c0caa3e.month);\n    // For each task of selected generate the html markup\n    filtered.forEach((task)=>{\n        markup += `<div class=\"modal__task-container\">\n      <label class=\"modal__task-label--delete\" for=\"task\">Task ${i}:</label>\n      <input class=\"modal__task-input\" name=\"task\" type=\"text\" data-task=${i} value=\"${task.taskTitle}\" autocomplete=\"off\" maxlength=\"30\"\n      readonly>\n      <button class=\"delete-task-btn\" data-task=${i}>Delete</button>\n    </div>`;\n        i++;\n    });\n    $fa7a60d60ed0fb7b$var$deleteContainer.innerHTML = \"\";\n    $fa7a60d60ed0fb7b$var$deleteContainer.insertAdjacentHTML(\"afterbegin\", markup);\n    $fa7a60d60ed0fb7b$var$backDrop.style.display = \"block\";\n    $fa7a60d60ed0fb7b$var$deleteTaskModal.style.display = \"flex\";\n};\n///////////////////////////////////////////////\n// OPEN WEATHER MODAL\n///////////////////////////////////////////////\nconst $fa7a60d60ed0fb7b$var$weatherIMG = document.querySelector(\".weather__img\");\nconst $fa7a60d60ed0fb7b$var$weatherTemperature = document.querySelector(\".weather__temp\");\nconst $fa7a60d60ed0fb7b$var$weatherHumidity = document.querySelector(\".humidity__text\");\nconst $fa7a60d60ed0fb7b$var$weatherWind = document.querySelector(\".wind__text\");\nconst $fa7a60d60ed0fb7b$var$KEY = \"9b3d812c470e4cc4abf95058240901\";\nconst $fa7a60d60ed0fb7b$export$8bcf072155cf9156 = async function() {\n    $fa7a60d60ed0fb7b$var$backDrop.style.display = \"block\";\n    $fa7a60d60ed0fb7b$var$weatherModal.style.display = \"flex\";\n    try {\n        $fa7a60d60ed0fb7b$var$weatherIMG.classList.add(\"spinner-class\");\n        const data = await $fa7a60d60ed0fb7b$export$f4026f193782c6da(\"Inverness\");\n        if (!data) throw new Error(\"Something went wrong with the data!\");\n        // Apply the data to the markup elements\n        $fa7a60d60ed0fb7b$var$weatherIMG.classList.remove(\"spinner-class\");\n        $fa7a60d60ed0fb7b$var$weatherIMG.src = data.current.condition.icon;\n        $fa7a60d60ed0fb7b$var$weatherTemperature.textContent = `${data.current.temp_c}\\xb0C`;\n        $fa7a60d60ed0fb7b$var$weatherHumidity.textContent = `${data.current.humidity}%`;\n        $fa7a60d60ed0fb7b$var$weatherWind.textContent = `${data.current.wind_mph} mph`;\n    } catch (error) {\n        console.error(error);\n    }\n};\nconst $fa7a60d60ed0fb7b$export$f4026f193782c6da = async function(location) {\n    try {\n        // Request data from weatherAPI\n        const apiJSON = await fetch(`http://api.weatherapi.com/v1/current.json?key=${$fa7a60d60ed0fb7b$var$KEY}&q=${location}&aqi=no`);\n        // Check if data has succesfully been retrieved\n        if (!apiJSON.ok) throw new Error(\"Network response was not OK\");\n        // Convert data from JSON format\n        const data = await apiJSON.json();\n        console.log(data);\n        return data;\n    } catch (error) {\n        // If something goes wrong crashes are caught here\n        console.error(\"Something went wrong here ...\");\n        console.error(error);\n    }\n};\nconst $fa7a60d60ed0fb7b$export$61e0beb31520f9bf = function() {\n    $54b47fc030b7b21e$export$4882ae973e0491e = JSON.parse(localStorage.getItem(\"profile\"));\n    if (localStorage.getItem(\"profile\")) {\n        $fa7a60d60ed0fb7b$var$usernameInput.placeholder = $54b47fc030b7b21e$export$4882ae973e0491e.username;\n        $fa7a60d60ed0fb7b$var$locationInput.placeholder = $54b47fc030b7b21e$export$4882ae973e0491e.location;\n    } else {\n        $fa7a60d60ed0fb7b$var$usernameInput.placeholder = \"Username\";\n        $fa7a60d60ed0fb7b$var$locationInput.placeholder = \"Location\";\n    }\n    $fa7a60d60ed0fb7b$var$backDrop.style.display = \"block\";\n    $fa7a60d60ed0fb7b$var$profileModal.style.display = \"flex\";\n};\n///////////////////////////////////////////////\n// PROFILE SAVE BUTTON\n///////////////////////////////////////////////\n$fa7a60d60ed0fb7b$var$profileSaveBtn.addEventListener(\"click\", function() {\n    const dataObject = {\n        username: localStorage.getItem(\"profile\") && $fa7a60d60ed0fb7b$var$usernameInput.value === \"\" ? $54b47fc030b7b21e$export$4882ae973e0491e.username : $fa7a60d60ed0fb7b$var$usernameInput.value,\n        location: localStorage.getItem(\"profile\") && $fa7a60d60ed0fb7b$var$locationInput.value === \"\" ? $54b47fc030b7b21e$export$4882ae973e0491e.location : $fa7a60d60ed0fb7b$var$locationInput.value\n    };\n    localStorage.setItem(\"profile\", JSON.stringify(dataObject));\n    $54b47fc030b7b21e$export$8482b82e7f2d1170();\n    $fa7a60d60ed0fb7b$var$backDrop.style.display = \"none\";\n    $fa7a60d60ed0fb7b$var$profileModal.style.display = \"none\";\n    // Clear input field\n    $fa7a60d60ed0fb7b$var$usernameInput.value = \"\";\n    $fa7a60d60ed0fb7b$var$locationInput.value = \"\";\n});\n///////////////////////////////////////////////\n// CANCEL BUTTON\n///////////////////////////////////////////////\n$fa7a60d60ed0fb7b$var$cancelBtn.forEach((btn)=>{\n    btn.addEventListener(\"click\", function() {\n        $fa7a60d60ed0fb7b$var$backDrop.style.display = \"none\";\n        $fa7a60d60ed0fb7b$var$addTaskModal.style.display = \"none\";\n        $fa7a60d60ed0fb7b$var$editTaskModal.style.display = \"none\";\n        $fa7a60d60ed0fb7b$var$deleteTaskModal.style.display = \"none\";\n        $fa7a60d60ed0fb7b$var$profileModal.style.display = \"none\";\n    });\n});\n///////////////////////////////////////////////\n// DONE BUTTON\n///////////////////////////////////////////////\n$fa7a60d60ed0fb7b$var$doneBtn.forEach((btn)=>{\n    btn.addEventListener(\"click\", function() {\n        $fa7a60d60ed0fb7b$var$backDrop.style.display = \"none\";\n        $fa7a60d60ed0fb7b$var$addTaskModal.style.display = \"none\";\n        $fa7a60d60ed0fb7b$var$editTaskModal.style.display = \"none\";\n        $fa7a60d60ed0fb7b$var$deleteTaskModal.style.display = \"none\";\n        // Render the calendar with the new data\n        $54b47fc030b7b21e$export$2062782c78489ae9();\n    });\n});\n///////////////////////////////////////////////\n// OK BUTTON\n///////////////////////////////////////////////\n$fa7a60d60ed0fb7b$var$okBtn.addEventListener(\"click\", function() {\n    $fa7a60d60ed0fb7b$var$backDrop.style.display = \"none\";\n    $fa7a60d60ed0fb7b$var$weatherModal.style.display = \"none\";\n});\n\n\n\"use strict\";\nconst $54b47fc030b7b21e$var$calendar = document.querySelector(\".organiser__dates\");\nconst $54b47fc030b7b21e$var$monthYear = document.getElementById(\"month-year\");\nconst $54b47fc030b7b21e$var$btnPrevious = document.querySelector(\".month__button--previous\");\nconst $54b47fc030b7b21e$var$btnNext = document.querySelector(\".month__button--next\");\nconst $54b47fc030b7b21e$var$avatarEl = document.querySelector(\".profile__avatar\");\nconst $54b47fc030b7b21e$var$usernameEl = document.querySelector(\".profile__username\");\nconst $54b47fc030b7b21e$var$locationEl = document.querySelector(\".profile__location\");\nconst $54b47fc030b7b21e$var$profileWeatherImg = document.querySelector(\".profile__weather-img\");\nconst $54b47fc030b7b21e$var$profileWeatherText = document.querySelector(\".profile__weather-text\");\nconst $54b47fc030b7b21e$var$weekdaysArray = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\"\n];\nlet $54b47fc030b7b21e$var$currentDate = new Date();\nlet $54b47fc030b7b21e$var$originalDate = new Date().getDate();\nlet $54b47fc030b7b21e$export$8ab225cdf6be8954;\nlet $54b47fc030b7b21e$export$7191f9b9098a3ea4 = localStorage.getItem(\"tasks\") ? JSON.parse(localStorage.getItem(\"tasks\")) : [];\nlet $54b47fc030b7b21e$export$4882ae973e0491e = localStorage.getItem(\"profile\") ? JSON.parse(localStorage.getItem(\"profile\")) : [];\nconst $54b47fc030b7b21e$export$ca000e230c0caa3e = {};\n// Gets all the data for the date you are working with\nconst $54b47fc030b7b21e$var$getDate = function() {\n    $54b47fc030b7b21e$export$ca000e230c0caa3e.day = $54b47fc030b7b21e$var$currentDate.getDay();\n    $54b47fc030b7b21e$export$ca000e230c0caa3e.month = $54b47fc030b7b21e$var$currentDate.getMonth();\n    $54b47fc030b7b21e$export$ca000e230c0caa3e.year = $54b47fc030b7b21e$var$currentDate.getFullYear();\n    $54b47fc030b7b21e$export$ca000e230c0caa3e.daysInMonth = new Date($54b47fc030b7b21e$export$ca000e230c0caa3e.year, $54b47fc030b7b21e$export$ca000e230c0caa3e.month + 1, 0).getDate();\n    $54b47fc030b7b21e$export$ca000e230c0caa3e.firstDayOfMonth = new Date($54b47fc030b7b21e$export$ca000e230c0caa3e.year, $54b47fc030b7b21e$export$ca000e230c0caa3e.month, 1);\n    $54b47fc030b7b21e$export$ca000e230c0caa3e.dateString = $54b47fc030b7b21e$export$ca000e230c0caa3e.firstDayOfMonth.toLocaleDateString(\"en-UK\", {\n        weekday: \"long\",\n        day: \"numeric\",\n        month: \"long\",\n        year: \"numeric\"\n    });\n    $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays = $54b47fc030b7b21e$var$weekdaysArray.indexOf($54b47fc030b7b21e$export$ca000e230c0caa3e.dateString.split(\", \")[0]);\n};\n// Adds a class modifier depending on what date it is currently\nconst $54b47fc030b7b21e$var$addCurrentMarkup = function(i) {\n    if (i === $54b47fc030b7b21e$var$originalDate && $54b47fc030b7b21e$export$ca000e230c0caa3e.month === new Date().getMonth()) return `--current`;\n    else return \"\";\n};\n// Returns the html markup needed for rendering the appropriate task titles\nconst $54b47fc030b7b21e$var$renderTaskTitle = function(i, line) {\n    const filtered = $54b47fc030b7b21e$export$7191f9b9098a3ea4.filter((task)=>{\n        return task.taskDate === i && $54b47fc030b7b21e$export$ca000e230c0caa3e.month === task.taskMonth;\n    });\n    if (filtered[line] && filtered[line].taskMonth === $54b47fc030b7b21e$export$ca000e230c0caa3e.month) return `${filtered[line].taskTitle}`;\n    else return \"\";\n};\n// Renders the add task button at the top of the dates, unless date has passed\nconst $54b47fc030b7b21e$var$renderAddTaskBtn = function(i) {\n    if (i < $54b47fc030b7b21e$var$originalDate) return \"\";\n    else return `<button class=\"tasks__btn tasks__btn--add\" aria-label=\"button to add task for this date\" data-date=\"${i}\"><i class=\"fa-solid fa-plus\"></i></button>`;\n};\n// Renders the edit button at the top of the dates, unless there are no tasks for that date\nconst $54b47fc030b7b21e$var$renderEditTaskBtn = function(i) {\n    if ($54b47fc030b7b21e$export$7191f9b9098a3ea4.some((task)=>task.taskDate === i)) return `<button class=\"tasks__btn tasks__btn--edit\" aria-label=\"button to edit existing tasks for this date\" data-date=\"${i}\"><i class=\"fa-solid fa-pen-to-square\"></i></button>`;\n    else return \"\";\n};\n// Renders the delete button at the top of the dates, unless there are no tasks for that date\nconst $54b47fc030b7b21e$var$renderDeleteTaskBtn = function(i) {\n    if ($54b47fc030b7b21e$export$7191f9b9098a3ea4.some((task)=>task.taskDate === i)) return `<button class=\"tasks__btn tasks__btn--delete\" aria-label=\"button to delete some tasks for this date\" data-date=\"${i}\"><i class=\"fa-solid fa-trash\"></i></button>`;\n    else return \"\";\n};\n// Renders the weather button at the top of every date, which will get the weather info from API and display it\nconst $54b47fc030b7b21e$var$renderWeatherBtn = function(i) {\n    if (i === $54b47fc030b7b21e$var$originalDate) return `<button class=\"tasks__btn tasks__btn--weather\" aria-label=\"button to see current weather for this date\" data-date=\"${i}\"><i class=\"fa-solid fa-cloud-sun\"></i></button>`;\n    else return \"\";\n};\n// Generates all the html markup for all the dates of the month\nconst $54b47fc030b7b21e$var$renderDates = function() {\n    // Collects all the markup when finished\n    let markup = \"\";\n    for(let i = 1; i <= $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays + $54b47fc030b7b21e$export$ca000e230c0caa3e.daysInMonth; i++)if (i > $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays) markup += `\n      <div class=\"tasks\">\n          <div class=\"tasks__date${$54b47fc030b7b21e$var$addCurrentMarkup(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays)}\"><span>${i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays}</span></div>\n          <div class=\"tasks__divider\">\n            ${$54b47fc030b7b21e$var$renderWeatherBtn(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays)}\n            ${$54b47fc030b7b21e$var$renderAddTaskBtn(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays)}\n            ${$54b47fc030b7b21e$var$renderEditTaskBtn(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays)}\n            ${$54b47fc030b7b21e$var$renderDeleteTaskBtn(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays)}\n          </div>\n          <div class=\"tasks__checkbox\">\n            <input type=\"checkbox\" name=\"checkbox\" id=\"task-1-${i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays}\">\n          </div>\n          <label class=\"tasks__todo\" for=\"task-1\" data-task=\"task-1-${i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays}\">${$54b47fc030b7b21e$var$renderTaskTitle(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays, 0) ? $54b47fc030b7b21e$var$renderTaskTitle(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays, 0) : \"\"}</label>\n          <div class=\"tasks__checkbox\">\n            <input type=\"checkbox\" name=\"checkbox\" id=\"task-2-${i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays}\">\n          </div>\n          <label class=\"tasks__todo\" for=\"task-2\" data-task=\"task-2-${i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays}\">${$54b47fc030b7b21e$var$renderTaskTitle(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays, 1) ? $54b47fc030b7b21e$var$renderTaskTitle(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays, 1) : \"\"}</label>\n          <div class=\"tasks__checkbox\">\n            <input type=\"checkbox\" name=\"checkbox\" id=\"task-3-${i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays}\">\n          </div>\n          <label class=\"tasks__todo\" for=\"task-3\" data-task=\"task-3-${i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays}\">${$54b47fc030b7b21e$var$renderTaskTitle(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays, 2) ? $54b47fc030b7b21e$var$renderTaskTitle(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays, 2) : \"\"}</label>\n          <div class=\"tasks__checkbox\">\n            <input type=\"checkbox\" name=\"checkbox\" id=\"task-4-${i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays}\">\n          </div>\n          <label class=\"tasks__todo\" for=\"task-4\" data-task=\"task-4-${i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays}\">${$54b47fc030b7b21e$var$renderTaskTitle(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays, 3) ? $54b47fc030b7b21e$var$renderTaskTitle(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays, 3) : \"\"}</label>\n          <div class=\"tasks__checkbox\">\n            <input type=\"checkbox\" name=\"checkbox\" id=\"task-5-${i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays}\">\n          </div>\n          <label class=\"tasks__todo\" for=\"task-5\" data-task=\"task-5-${i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays}\">${$54b47fc030b7b21e$var$renderTaskTitle(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays, 4) ? $54b47fc030b7b21e$var$renderTaskTitle(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays, 4) : \"\"}</label>\n          <div class=\"tasks__checkbox\">\n            <input type=\"checkbox\" name=\"checkbox\" id=\"task-6-${i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays}\">\n          </div>\n          <label class=\"tasks__todo\" for=\"task-6\" data-task=\"task-6-${i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays}\">${$54b47fc030b7b21e$var$renderTaskTitle(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays, 5) ? $54b47fc030b7b21e$var$renderTaskTitle(i - $54b47fc030b7b21e$export$ca000e230c0caa3e.paddingDays, 5) : \"\"}</label>\n        </div>\n      `;\n    else markup += `\n      <div class=\"padding\"></div>\n      `;\n    // Clear and insert html markup into the calendar\n    $54b47fc030b7b21e$var$calendar.innerHTML = \"\";\n    $54b47fc030b7b21e$var$calendar.insertAdjacentHTML(\"afterbegin\", markup);\n};\n// Renders and updates the current month and year text at the top of the calendar\nconst $54b47fc030b7b21e$var$renderMonthYear = function() {\n    $54b47fc030b7b21e$var$monthYear.textContent = `${new Intl.DateTimeFormat(\"en-UK\", {\n        month: \"long\"\n    }).format($54b47fc030b7b21e$var$currentDate)} ${$54b47fc030b7b21e$var$currentDate.getFullYear()}`;\n};\nconst $54b47fc030b7b21e$export$2062782c78489ae9 = function() {\n    $54b47fc030b7b21e$export$7191f9b9098a3ea4 = localStorage.getItem(\"tasks\") ? JSON.parse(localStorage.getItem(\"tasks\")) : [];\n    // Renders and updates the current month and year text at the top of the calendar\n    $54b47fc030b7b21e$var$renderMonthYear();\n    // Gets the current (or requested by previous or next month buttons) dates and saves it in state object\n    $54b47fc030b7b21e$var$getDate();\n    // Renders all the markup for each date of currently viewed month\n    $54b47fc030b7b21e$var$renderDates();\n    // Attaches eventlisteners to the add, edit, and delete buttons\n    $54b47fc030b7b21e$var$attachBtnHandler();\n    // Renders the css styles according to whether the checkbox is checked or not\n    $54b47fc030b7b21e$var$attachCheckBoxHandler();\n};\n// Button for going through the months - Previous Month\n$54b47fc030b7b21e$var$btnPrevious.addEventListener(\"click\", function() {\n    if ($54b47fc030b7b21e$var$currentDate.getMonth() === 0) $54b47fc030b7b21e$var$currentDate = new Date($54b47fc030b7b21e$export$ca000e230c0caa3e.year - 1, 11);\n    else $54b47fc030b7b21e$var$currentDate = new Date($54b47fc030b7b21e$export$ca000e230c0caa3e.year, $54b47fc030b7b21e$export$ca000e230c0caa3e.month - 1);\n    $54b47fc030b7b21e$export$2062782c78489ae9();\n});\n// Button for going through the months - Next Month\n$54b47fc030b7b21e$var$btnNext.addEventListener(\"click\", function() {\n    if ($54b47fc030b7b21e$var$currentDate.getMonth() === 11) $54b47fc030b7b21e$var$currentDate = new Date($54b47fc030b7b21e$export$ca000e230c0caa3e.year + 1, 0);\n    else $54b47fc030b7b21e$var$currentDate = new Date($54b47fc030b7b21e$export$ca000e230c0caa3e.year, $54b47fc030b7b21e$export$ca000e230c0caa3e.month + 1);\n    $54b47fc030b7b21e$export$2062782c78489ae9();\n});\n////////////////////////////////////\n// Function which adds all the eventlisteners to the buttons on every date\n////////////////////////////////////\n// Add eventlisteners to all the \"add task\" buttons on all the dates\n// Also collects the dataset for the date of the clicked button\nconst $54b47fc030b7b21e$var$attachBtnHandler = function() {\n    const addTaskBtns = document.querySelectorAll(\".tasks__btn--add\");\n    const editTaskBtns = document.querySelectorAll(\".tasks__btn--edit\");\n    const deleteTaskBtns = document.querySelectorAll(\".tasks__btn--delete\");\n    const weatherBtns = document.querySelectorAll(\".tasks__btn--weather\");\n    addTaskBtns.forEach((btn)=>btn.addEventListener(\"click\", function(event) {\n            // Get the dataset from the button itself when clicking the icon within the button\n            $54b47fc030b7b21e$export$8ab225cdf6be8954 = event.target.closest(\".tasks__btn--add\").dataset.date;\n            // Opens the add task modal, creates object of date info and task title, and saves to localstorage\n            $fa7a60d60ed0fb7b$export$74fc2f5227cc41bd();\n        }));\n    editTaskBtns.forEach((btn)=>{\n        btn.addEventListener(\"click\", function(event) {\n            // Get the dataset from the button itself when clicking the icon within the button\n            $54b47fc030b7b21e$export$8ab225cdf6be8954 = event.target.closest(\".tasks__btn--edit\").dataset.date;\n            // Opens the edit modal, filters, and renders tasks for that day inside the modal\n            $fa7a60d60ed0fb7b$export$316cd9caae89eb91();\n            // Checks which tasks have been edited and saves them into localstorage\n            $54b47fc030b7b21e$var$editTaskHandler();\n        });\n    });\n    deleteTaskBtns.forEach((btn)=>{\n        btn.addEventListener(\"click\", function(event) {\n            // Get the dataset from the button itself when clicking the icon within the button\n            $54b47fc030b7b21e$export$8ab225cdf6be8954 = event.target.closest(\".tasks__btn--delete\").dataset.date;\n            // Opens the delete modal, filters, and renders tasks for that day inside the modal\n            $fa7a60d60ed0fb7b$export$dc3d54406d71c4fb();\n            // Checks which tasks have been deleted and saves changes into localstorage\n            $54b47fc030b7b21e$var$deleteTaskHandler();\n        });\n    });\n    weatherBtns.forEach((btn)=>{\n        btn.addEventListener(\"click\", function(event) {\n            // Get the dataset from the button itself when clicking the icon within the button\n            $54b47fc030b7b21e$export$8ab225cdf6be8954 = event.target.closest(\".tasks__btn--weather\").dataset.date;\n            // Opens the weather modal, and renders the weather from an API (openweathermap) for that day inside the modal\n            $fa7a60d60ed0fb7b$export$8bcf072155cf9156();\n        });\n    });\n};\nconst $54b47fc030b7b21e$var$editTaskHandler = function() {\n    // Select the dynamically rendered (by the modal.openEditTask) btns and inputs inside the edit modal\n    const editTaskBtns = document.querySelectorAll(\".edit-task-btn\");\n    const taskInputs = document.querySelectorAll(\".modal__task-input\");\n    // Original and new values for the task titles to compare and update\n    let originalValue;\n    let newValue;\n    editTaskBtns.forEach((btn)=>{\n        btn.addEventListener(\"click\", ()=>{\n            if (btn.textContent === \"Edit\") {\n                btn.textContent = \"Save\";\n                taskInputs.forEach((input)=>{\n                    // Sets the inputs from readonly to editable\n                    if (btn.dataset.task === input.dataset.task && input.hasAttribute(\"readonly\")) {\n                        // Sets original value to be compared later\n                        originalValue = input.value;\n                        input.removeAttribute(\"readonly\");\n                    }\n                });\n            // Sets inputs back to readonly, compares each input with original values and updates the changed titles, and finally updates localstorage\n            } else if (btn.textContent === \"Save\") {\n                btn.textContent = \"Edit\";\n                taskInputs.forEach((input)=>{\n                    if (btn.dataset.task === input.dataset.task && !input.hasAttribute(\"readonly\")) {\n                        // Sets new value to replace with in tasks later\n                        newValue = input.value;\n                        const mappedTasks = $54b47fc030b7b21e$export$7191f9b9098a3ea4.map((task)=>{\n                            if (task.taskDate !== Number($54b47fc030b7b21e$export$8ab225cdf6be8954) && task.taskMonth === $54b47fc030b7b21e$export$ca000e230c0caa3e.month) return task;\n                            else if (task.taskDate === Number($54b47fc030b7b21e$export$8ab225cdf6be8954) && task.taskTitle !== originalValue && task.taskMonth === $54b47fc030b7b21e$export$ca000e230c0caa3e.month) return task;\n                            else if (task.taskDate === Number($54b47fc030b7b21e$export$8ab225cdf6be8954) && task.taskTitle === originalValue && task.taskMonth === $54b47fc030b7b21e$export$ca000e230c0caa3e.month) {\n                                task.taskTitle = newValue;\n                                return task;\n                            }\n                        });\n                        input.setAttribute(\"readonly\", \"readonly\");\n                        localStorage.setItem(\"tasks\", JSON.stringify(mappedTasks));\n                    }\n                });\n            }\n        });\n    });\n};\nconst $54b47fc030b7b21e$var$deleteTaskHandler = function() {\n    // Select the dynamically rendered (by the modal.openDeleteTask) btns and inputs inside the delete task modal\n    const deleteTaskBtns = document.querySelectorAll(\".delete-task-btn\");\n    const taskInputs = document.querySelectorAll(\".modal__task-input\");\n    let originalValueArray = [];\n    deleteTaskBtns.forEach((btn)=>{\n        btn.addEventListener(\"click\", ()=>{\n            if (btn.textContent === \"Delete\") btn.textContent = \"Confirm\";\n            else if (btn.textContent === \"Confirm\") {\n                btn.textContent = \"Delete\";\n                taskInputs.forEach((item)=>{\n                    if (btn.dataset.task === item.dataset.task) // After confirm is clicked this value will be added to array which will later be used to filter out these to be deteled tasks from the main list of tasks\n                    originalValueArray.push(item.value);\n                    const filteredTasks = $54b47fc030b7b21e$export$7191f9b9098a3ea4.filter((task)=>{\n                        if (task.taskDate !== Number($54b47fc030b7b21e$export$8ab225cdf6be8954) && task.taskMonth === $54b47fc030b7b21e$export$ca000e230c0caa3e.month) return task;\n                        else if (task.taskDate === Number($54b47fc030b7b21e$export$8ab225cdf6be8954) && !originalValueArray.some((item)=>item === task.taskTitle) && task.taskMonth === $54b47fc030b7b21e$export$ca000e230c0caa3e.month) return task;\n                        else if (task.taskDate === Number($54b47fc030b7b21e$export$8ab225cdf6be8954) && originalValueArray.some((item)=>item === task.taskTitle) && task.taskMonth === $54b47fc030b7b21e$export$ca000e230c0caa3e.month) return;\n                    });\n                    localStorage.setItem(\"tasks\", JSON.stringify(filteredTasks));\n                });\n            }\n        });\n    });\n};\n// Listen to and get info from the checkboxes clicked\nconst $54b47fc030b7b21e$var$attachCheckBoxHandler = function() {\n    const checkBox = document.querySelectorAll('input[type=\"checkbox\"]');\n    const taskLabel = document.querySelectorAll(\".tasks__todo\");\n    checkBox.forEach((box)=>box.addEventListener(\"change\", function() {\n            if (this.checked) taskLabel.forEach((label)=>{\n                // Label dataset and checkbox id have matching values representing the month and date\n                if (label.dataset.task === this.id) {\n                    label.style.opacity = 0.5;\n                    label.style.textDecoration = \"line-through\";\n                    // Traverses the DOM until it finds the textContent for the task\n                    const data = this.parentElement.nextElementSibling.textContent;\n                    // Sets the checked status for this task in the localstorage\n                    $54b47fc030b7b21e$var$addCheckedStatus(data, true);\n                }\n            });\n            else taskLabel.forEach((label)=>{\n                // Label dataset and checkbox id have matching values representing the month and date\n                if (label.dataset.task === this.id) {\n                    label.style.opacity = 1;\n                    label.style.textDecoration = \"none\";\n                    // Traverses the DOM until it finds the textContent for the task\n                    const data = this.parentElement.nextElementSibling.textContent;\n                    // Sets the checked status for this task in the localstorage\n                    $54b47fc030b7b21e$var$addCheckedStatus(data, false);\n                }\n            });\n        }));\n    checkBox.forEach((box)=>{\n        const data = box.parentElement.nextElementSibling.textContent;\n        $54b47fc030b7b21e$export$7191f9b9098a3ea4.forEach((task)=>{\n            if (task.taskTitle === data && task.checked === true) {\n                box.setAttribute(\"checked\", \"\");\n                taskLabel.forEach((label)=>{\n                    if (label.textContent === data) {\n                        label.style.opacity = 0.5;\n                        label.style.textDecoration = \"line-through\";\n                    }\n                });\n            }\n        });\n    });\n};\nconst $54b47fc030b7b21e$var$addCheckedStatus = function(data, status) {\n    $54b47fc030b7b21e$export$7191f9b9098a3ea4.forEach((task)=>{\n        if (task.taskTitle === data) {\n            task.checked = status;\n            localStorage.setItem(\"tasks\", JSON.stringify($54b47fc030b7b21e$export$7191f9b9098a3ea4));\n        }\n    });\n};\n$54b47fc030b7b21e$var$avatarEl.addEventListener(\"click\", function() {\n    $fa7a60d60ed0fb7b$export$61e0beb31520f9bf();\n});\nconst $54b47fc030b7b21e$export$8482b82e7f2d1170 = function() {\n    $54b47fc030b7b21e$export$4882ae973e0491e = JSON.parse(localStorage.getItem(\"profile\"));\n    if (localStorage.getItem(\"profile\")) {\n        $54b47fc030b7b21e$var$usernameEl.textContent = $54b47fc030b7b21e$export$4882ae973e0491e.username;\n        $54b47fc030b7b21e$var$locationEl.textContent = $54b47fc030b7b21e$export$4882ae973e0491e.location;\n    } else {\n        $54b47fc030b7b21e$var$usernameEl.textContent = \"User\";\n        $54b47fc030b7b21e$var$locationEl.textContent = \"Location\";\n    }\n};\nconst $54b47fc030b7b21e$var$renderProfileWeather = async function() {\n    try {\n        $54b47fc030b7b21e$var$profileWeatherImg.classList.add(\"spinner-class\");\n        const data = await $fa7a60d60ed0fb7b$export$f4026f193782c6da(\"Inverness\");\n        if (!data) throw new Error(\"Something went wrong with the data!\");\n        // Apply the data to the markup elements\n        $54b47fc030b7b21e$var$profileWeatherImg.classList.remove(\"spinner-class\");\n        $54b47fc030b7b21e$var$profileWeatherImg.src = data.current.condition.icon;\n        $54b47fc030b7b21e$var$profileWeatherText.textContent = `${data.current.temp_c}\\xb0C`;\n    } catch (error) {\n        console.error(error);\n    }\n};\n$54b47fc030b7b21e$export$8482b82e7f2d1170();\n$54b47fc030b7b21e$var$renderProfileWeather();\n$54b47fc030b7b21e$var$getDate();\n$54b47fc030b7b21e$var$renderMonthYear();\n$54b47fc030b7b21e$var$renderDates();\n$54b47fc030b7b21e$var$attachBtnHandler();\n$54b47fc030b7b21e$var$attachCheckBoxHandler();\n\n\n//# sourceMappingURL=index.8ba6935d.js.map\n","\"use strict\";\n\nimport * as modal from \"./modal.js\";\n\nconst calendar = document.querySelector(\".organiser__dates\");\nconst monthYear = document.getElementById(\"month-year\");\nconst btnPrevious = document.querySelector(\".month__button--previous\");\nconst btnNext = document.querySelector(\".month__button--next\");\n\nconst avatarEl = document.querySelector(\".profile__avatar\");\nconst usernameEl = document.querySelector(\".profile__username\");\nconst locationEl = document.querySelector(\".profile__location\");\n\nconst profileWeatherImg = document.querySelector(\".profile__weather-img\");\nconst profileWeatherText = document.querySelector(\".profile__weather-text\");\n\nconst weekdaysArray = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\n\nlet currentDate = new Date();\nlet originalDate = new Date().getDate();\n\nexport let clickedDate;\n\nexport let tasks = localStorage.getItem(\"tasks\")\n  ? JSON.parse(localStorage.getItem(\"tasks\"))\n  : [];\n\nexport let profile = localStorage.getItem(\"profile\")\n  ? JSON.parse(localStorage.getItem(\"profile\"))\n  : [];\n\nexport const state = {};\n\n// Gets all the data for the date you are working with\nconst getDate = function () {\n  state.day = currentDate.getDay();\n  state.month = currentDate.getMonth();\n  state.year = currentDate.getFullYear();\n  state.daysInMonth = new Date(state.year, state.month + 1, 0).getDate();\n  state.firstDayOfMonth = new Date(state.year, state.month, 1);\n  state.dateString = state.firstDayOfMonth.toLocaleDateString(\"en-UK\", {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n  });\n  state.paddingDays = weekdaysArray.indexOf(state.dateString.split(\", \")[0]);\n};\n\n// Adds a class modifier depending on what date it is currently\nconst addCurrentMarkup = function (i) {\n  if (i === originalDate && state.month === new Date().getMonth()) {\n    return `--current`;\n  } else {\n    return \"\";\n  }\n};\n\n// Returns the html markup needed for rendering the appropriate task titles\nconst renderTaskTitle = function (i, line) {\n  const filtered = tasks.filter((task) => {\n    return task.taskDate === i && state.month === task.taskMonth;\n  });\n\n  if (filtered[line] && filtered[line].taskMonth === state.month) {\n    return `${filtered[line].taskTitle}`;\n  } else {\n    return \"\";\n  }\n};\n\n// Renders the add task button at the top of the dates, unless date has passed\nconst renderAddTaskBtn = function (i) {\n  if (i < originalDate) {\n    return \"\";\n  } else {\n    return `<button class=\"tasks__btn tasks__btn--add\" aria-label=\"button to add task for this date\" data-date=\"${i}\"><i class=\"fa-solid fa-plus\"></i></button>`;\n  }\n};\n\n// Renders the edit button at the top of the dates, unless there are no tasks for that date\nconst renderEditTaskBtn = function (i) {\n  if (tasks.some((task) => task.taskDate === i)) {\n    return `<button class=\"tasks__btn tasks__btn--edit\" aria-label=\"button to edit existing tasks for this date\" data-date=\"${i}\"><i class=\"fa-solid fa-pen-to-square\"></i></button>`;\n  } else {\n    return \"\";\n  }\n};\n\n// Renders the delete button at the top of the dates, unless there are no tasks for that date\nconst renderDeleteTaskBtn = function (i) {\n  if (tasks.some((task) => task.taskDate === i)) {\n    return `<button class=\"tasks__btn tasks__btn--delete\" aria-label=\"button to delete some tasks for this date\" data-date=\"${i}\"><i class=\"fa-solid fa-trash\"></i></button>`;\n  } else {\n    return \"\";\n  }\n};\n\n// Renders the weather button at the top of every date, which will get the weather info from API and display it\nconst renderWeatherBtn = function (i) {\n  if (i === originalDate) {\n    return `<button class=\"tasks__btn tasks__btn--weather\" aria-label=\"button to see current weather for this date\" data-date=\"${i}\"><i class=\"fa-solid fa-cloud-sun\"></i></button>`;\n  } else {\n    return \"\";\n  }\n};\n\n// Generates all the html markup for all the dates of the month\nconst renderDates = function () {\n  // Collects all the markup when finished\n  let markup = \"\";\n  for (let i = 1; i <= state.paddingDays + state.daysInMonth; i++) {\n    if (i > state.paddingDays) {\n      markup += `\n      <div class=\"tasks\">\n          <div class=\"tasks__date${addCurrentMarkup(\n            i - state.paddingDays\n          )}\"><span>${i - state.paddingDays}</span></div>\n          <div class=\"tasks__divider\">\n            ${renderWeatherBtn(i - state.paddingDays)}\n            ${renderAddTaskBtn(i - state.paddingDays)}\n            ${renderEditTaskBtn(i - state.paddingDays)}\n            ${renderDeleteTaskBtn(i - state.paddingDays)}\n          </div>\n          <div class=\"tasks__checkbox\">\n            <input type=\"checkbox\" name=\"checkbox\" id=\"task-1-${\n              i - state.paddingDays\n            }\">\n          </div>\n          <label class=\"tasks__todo\" for=\"task-1\" data-task=\"task-1-${\n            i - state.paddingDays\n          }\">${\n        renderTaskTitle(i - state.paddingDays, 0)\n          ? renderTaskTitle(i - state.paddingDays, 0)\n          : \"\"\n      }</label>\n          <div class=\"tasks__checkbox\">\n            <input type=\"checkbox\" name=\"checkbox\" id=\"task-2-${\n              i - state.paddingDays\n            }\">\n          </div>\n          <label class=\"tasks__todo\" for=\"task-2\" data-task=\"task-2-${\n            i - state.paddingDays\n          }\">${\n        renderTaskTitle(i - state.paddingDays, 1)\n          ? renderTaskTitle(i - state.paddingDays, 1)\n          : \"\"\n      }</label>\n          <div class=\"tasks__checkbox\">\n            <input type=\"checkbox\" name=\"checkbox\" id=\"task-3-${\n              i - state.paddingDays\n            }\">\n          </div>\n          <label class=\"tasks__todo\" for=\"task-3\" data-task=\"task-3-${\n            i - state.paddingDays\n          }\">${\n        renderTaskTitle(i - state.paddingDays, 2)\n          ? renderTaskTitle(i - state.paddingDays, 2)\n          : \"\"\n      }</label>\n          <div class=\"tasks__checkbox\">\n            <input type=\"checkbox\" name=\"checkbox\" id=\"task-4-${\n              i - state.paddingDays\n            }\">\n          </div>\n          <label class=\"tasks__todo\" for=\"task-4\" data-task=\"task-4-${\n            i - state.paddingDays\n          }\">${\n        renderTaskTitle(i - state.paddingDays, 3)\n          ? renderTaskTitle(i - state.paddingDays, 3)\n          : \"\"\n      }</label>\n          <div class=\"tasks__checkbox\">\n            <input type=\"checkbox\" name=\"checkbox\" id=\"task-5-${\n              i - state.paddingDays\n            }\">\n          </div>\n          <label class=\"tasks__todo\" for=\"task-5\" data-task=\"task-5-${\n            i - state.paddingDays\n          }\">${\n        renderTaskTitle(i - state.paddingDays, 4)\n          ? renderTaskTitle(i - state.paddingDays, 4)\n          : \"\"\n      }</label>\n          <div class=\"tasks__checkbox\">\n            <input type=\"checkbox\" name=\"checkbox\" id=\"task-6-${\n              i - state.paddingDays\n            }\">\n          </div>\n          <label class=\"tasks__todo\" for=\"task-6\" data-task=\"task-6-${\n            i - state.paddingDays\n          }\">${\n        renderTaskTitle(i - state.paddingDays, 5)\n          ? renderTaskTitle(i - state.paddingDays, 5)\n          : \"\"\n      }</label>\n        </div>\n      `;\n    } else {\n      markup += `\n      <div class=\"padding\"></div>\n      `;\n    }\n  }\n  // Clear and insert html markup into the calendar\n  calendar.innerHTML = \"\";\n  calendar.insertAdjacentHTML(\"afterbegin\", markup);\n};\n\n// Renders and updates the current month and year text at the top of the calendar\nconst renderMonthYear = function () {\n  monthYear.textContent = `${new Intl.DateTimeFormat(\"en-UK\", {\n    month: \"long\",\n  }).format(currentDate)} ${currentDate.getFullYear()}`;\n};\n\n// Helper function that executes all the modular functions needed at once\nexport const executeOrder = function () {\n  tasks = localStorage.getItem(\"tasks\")\n    ? JSON.parse(localStorage.getItem(\"tasks\"))\n    : [];\n  // Renders and updates the current month and year text at the top of the calendar\n  renderMonthYear();\n  // Gets the current (or requested by previous or next month buttons) dates and saves it in state object\n  getDate();\n  // Renders all the markup for each date of currently viewed month\n  renderDates();\n  // Attaches eventlisteners to the add, edit, and delete buttons\n  attachBtnHandler();\n  // Renders the css styles according to whether the checkbox is checked or not\n  attachCheckBoxHandler();\n};\n\n// Button for going through the months - Previous Month\nbtnPrevious.addEventListener(\"click\", function () {\n  if (currentDate.getMonth() === 0) {\n    currentDate = new Date(state.year - 1, 11);\n  } else {\n    currentDate = new Date(state.year, state.month - 1);\n  }\n  executeOrder();\n});\n\n// Button for going through the months - Next Month\nbtnNext.addEventListener(\"click\", function () {\n  if (currentDate.getMonth() === 11) {\n    currentDate = new Date(state.year + 1, 0);\n  } else {\n    currentDate = new Date(state.year, state.month + 1);\n  }\n  executeOrder();\n});\n\n////////////////////////////////////\n// Function which adds all the eventlisteners to the buttons on every date\n////////////////////////////////////\n\n// Add eventlisteners to all the \"add task\" buttons on all the dates\n// Also collects the dataset for the date of the clicked button\nconst attachBtnHandler = function () {\n  const addTaskBtns = document.querySelectorAll(\".tasks__btn--add\");\n  const editTaskBtns = document.querySelectorAll(\".tasks__btn--edit\");\n  const deleteTaskBtns = document.querySelectorAll(\".tasks__btn--delete\");\n  const weatherBtns = document.querySelectorAll(\".tasks__btn--weather\");\n\n  addTaskBtns.forEach((btn) =>\n    btn.addEventListener(\"click\", function (event) {\n      // Get the dataset from the button itself when clicking the icon within the button\n      clickedDate = event.target.closest(\".tasks__btn--add\").dataset.date;\n      // Opens the add task modal, creates object of date info and task title, and saves to localstorage\n      modal.openAddTask();\n    })\n  );\n\n  editTaskBtns.forEach((btn) => {\n    btn.addEventListener(\"click\", function (event) {\n      // Get the dataset from the button itself when clicking the icon within the button\n      clickedDate = event.target.closest(\".tasks__btn--edit\").dataset.date;\n      // Opens the edit modal, filters, and renders tasks for that day inside the modal\n      modal.openEditTask();\n      // Checks which tasks have been edited and saves them into localstorage\n      editTaskHandler();\n    });\n  });\n\n  deleteTaskBtns.forEach((btn) => {\n    btn.addEventListener(\"click\", function (event) {\n      // Get the dataset from the button itself when clicking the icon within the button\n      clickedDate = event.target.closest(\".tasks__btn--delete\").dataset.date;\n      // Opens the delete modal, filters, and renders tasks for that day inside the modal\n      modal.openDeleteTask();\n      // Checks which tasks have been deleted and saves changes into localstorage\n      deleteTaskHandler();\n    });\n  });\n\n  weatherBtns.forEach((btn) => {\n    btn.addEventListener(\"click\", function (event) {\n      // Get the dataset from the button itself when clicking the icon within the button\n      clickedDate = event.target.closest(\".tasks__btn--weather\").dataset.date;\n      // Opens the weather modal, and renders the weather from an API (openweathermap) for that day inside the modal\n      modal.openWeatherModal();\n    });\n  });\n};\n\nconst editTaskHandler = function () {\n  // Select the dynamically rendered (by the modal.openEditTask) btns and inputs inside the edit modal\n  const editTaskBtns = document.querySelectorAll(\".edit-task-btn\");\n  const taskInputs = document.querySelectorAll(\".modal__task-input\");\n\n  // Original and new values for the task titles to compare and update\n  let originalValue;\n  let newValue;\n\n  editTaskBtns.forEach((btn) => {\n    btn.addEventListener(\"click\", () => {\n      if (btn.textContent === \"Edit\") {\n        btn.textContent = \"Save\";\n        taskInputs.forEach((input) => {\n          // Sets the inputs from readonly to editable\n          if (\n            btn.dataset.task === input.dataset.task &&\n            input.hasAttribute(\"readonly\")\n          ) {\n            // Sets original value to be compared later\n            originalValue = input.value;\n            input.removeAttribute(\"readonly\");\n          }\n        });\n        // Sets inputs back to readonly, compares each input with original values and updates the changed titles, and finally updates localstorage\n      } else if (btn.textContent === \"Save\") {\n        btn.textContent = \"Edit\";\n\n        taskInputs.forEach((input) => {\n          if (\n            btn.dataset.task === input.dataset.task &&\n            !input.hasAttribute(\"readonly\")\n          ) {\n            // Sets new value to replace with in tasks later\n            newValue = input.value;\n\n            const mappedTasks = tasks.map((task) => {\n              if (\n                task.taskDate !== Number(clickedDate) &&\n                task.taskMonth === state.month\n              ) {\n                return task;\n              } else if (\n                task.taskDate === Number(clickedDate) &&\n                task.taskTitle !== originalValue &&\n                task.taskMonth === state.month\n              ) {\n                return task;\n              } else if (\n                task.taskDate === Number(clickedDate) &&\n                task.taskTitle === originalValue &&\n                task.taskMonth === state.month\n              ) {\n                task.taskTitle = newValue;\n                return task;\n              }\n            });\n\n            input.setAttribute(\"readonly\", \"readonly\");\n\n            localStorage.setItem(\"tasks\", JSON.stringify(mappedTasks));\n          }\n        });\n      }\n    });\n  });\n};\n\nconst deleteTaskHandler = function () {\n  // Select the dynamically rendered (by the modal.openDeleteTask) btns and inputs inside the delete task modal\n  const deleteTaskBtns = document.querySelectorAll(\".delete-task-btn\");\n  const taskInputs = document.querySelectorAll(\".modal__task-input\");\n\n  let originalValueArray = [];\n\n  deleteTaskBtns.forEach((btn) => {\n    btn.addEventListener(\"click\", () => {\n      if (btn.textContent === \"Delete\") {\n        btn.textContent = \"Confirm\";\n      } else if (btn.textContent === \"Confirm\") {\n        btn.textContent = \"Delete\";\n        taskInputs.forEach((item) => {\n          if (btn.dataset.task === item.dataset.task) {\n            // After confirm is clicked this value will be added to array which will later be used to filter out these to be deteled tasks from the main list of tasks\n            originalValueArray.push(item.value);\n          }\n          const filteredTasks = tasks.filter((task) => {\n            if (\n              task.taskDate !== Number(clickedDate) &&\n              task.taskMonth === state.month\n            ) {\n              return task;\n            } else if (\n              task.taskDate === Number(clickedDate) &&\n              !originalValueArray.some((item) => item === task.taskTitle) &&\n              task.taskMonth === state.month\n            ) {\n              return task;\n            } else if (\n              task.taskDate === Number(clickedDate) &&\n              originalValueArray.some((item) => item === task.taskTitle) &&\n              task.taskMonth === state.month\n            ) {\n              return;\n            }\n          });\n          localStorage.setItem(\"tasks\", JSON.stringify(filteredTasks));\n        });\n      }\n    });\n  });\n};\n\n// Listen to and get info from the checkboxes clicked\nconst attachCheckBoxHandler = function () {\n  const checkBox = document.querySelectorAll('input[type=\"checkbox\"]');\n  const taskLabel = document.querySelectorAll(\".tasks__todo\");\n\n  checkBox.forEach((box) =>\n    box.addEventListener(\"change\", function () {\n      if (this.checked) {\n        taskLabel.forEach((label) => {\n          // Label dataset and checkbox id have matching values representing the month and date\n          if (label.dataset.task === this.id) {\n            label.style.opacity = 0.5;\n            label.style.textDecoration = \"line-through\";\n            // Traverses the DOM until it finds the textContent for the task\n            const data = this.parentElement.nextElementSibling.textContent;\n            // Sets the checked status for this task in the localstorage\n            addCheckedStatus(data, true);\n          }\n        });\n      } else {\n        taskLabel.forEach((label) => {\n          // Label dataset and checkbox id have matching values representing the month and date\n          if (label.dataset.task === this.id) {\n            label.style.opacity = 1;\n            label.style.textDecoration = \"none\";\n            // Traverses the DOM until it finds the textContent for the task\n            const data = this.parentElement.nextElementSibling.textContent;\n            // Sets the checked status for this task in the localstorage\n            addCheckedStatus(data, false);\n          }\n        });\n      }\n    })\n  );\n\n  checkBox.forEach((box) => {\n    const data = box.parentElement.nextElementSibling.textContent;\n    tasks.forEach((task) => {\n      if (task.taskTitle === data && task.checked === true) {\n        box.setAttribute(\"checked\", \"\");\n        taskLabel.forEach((label) => {\n          if (label.textContent === data) {\n            label.style.opacity = 0.5;\n            label.style.textDecoration = \"line-through\";\n          }\n        });\n      }\n    });\n  });\n};\n\nconst addCheckedStatus = function (data, status) {\n  tasks.forEach((task) => {\n    if (task.taskTitle === data) {\n      task.checked = status;\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  });\n};\n\navatarEl.addEventListener(\"click\", function () {\n  modal.openProfileModal();\n});\n\nexport const renderProfile = function () {\n  profile = JSON.parse(localStorage.getItem(\"profile\"));\n\n  if (localStorage.getItem(\"profile\")) {\n    usernameEl.textContent = profile.username;\n    locationEl.textContent = profile.location;\n  } else {\n    usernameEl.textContent = \"User\";\n    locationEl.textContent = \"Location\";\n  }\n};\n\nconst renderProfileWeather = async function () {\n  try {\n    profileWeatherImg.classList.add(\"spinner-class\");\n\n    const data = await modal.weatherAPI(\"Inverness\");\n\n    if (!data) {\n      throw new Error(\"Something went wrong with the data!\");\n    }\n\n    // Apply the data to the markup elements\n    profileWeatherImg.classList.remove(\"spinner-class\");\n    profileWeatherImg.src = data.current.condition.icon;\n    profileWeatherText.textContent = `${data.current.temp_c}°C`;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nrenderProfile();\nrenderProfileWeather();\ngetDate();\nrenderMonthYear();\nrenderDates();\nattachBtnHandler();\nattachCheckBoxHandler();\n","\"use strict\";\n\nimport * as main from \"./main.js\";\n\nconst backDrop = document.querySelector(\".modal__backdrop\");\nconst addTaskModal = document.querySelector(\".modal__new-task\");\nconst editTaskModal = document.querySelector(\".modal__edit-task\");\nconst deleteTaskModal = document.querySelector(\".modal__delete-task\");\nconst weatherModal = document.querySelector(\".modal__weather\");\nconst profileModal = document.querySelector(\".modal__profile\");\n\nconst modalForm = document.querySelector(\".modal__form\");\nconst addTaskInput = document.querySelector(\".modal__task-input\");\n\nconst usernameInput = document.querySelector(\".username-input\");\nconst locationInput = document.querySelector(\".location-input\");\n\nconst editContainer = document.querySelector(\".modal__render-edit-container\");\nconst deleteContainer = document.querySelector(\n  \".modal__render-delete-container\"\n);\n\nconst saveBtn = document.querySelector(\".modal__btn-save\");\nconst profileSaveBtn = document.querySelector(\".modal__btn-profile-save\");\nconst doneBtn = document.querySelectorAll(\".modal__btn-done\");\nconst cancelBtn = document.querySelectorAll(\".modal__btn-cancel\");\nconst okBtn = document.querySelector(\".modal__btn-ok\");\n\nmodalForm.addEventListener(\"keydown\", function (event) {\n  // Stop anything from happening when user presses the enter key\n  if (event.key === \"Enter\") {\n    event.preventDefault();\n  }\n});\n\n///////////////////////////////////////////////\n// SAVE BUTTON\n///////////////////////////////////////////////\n\nsaveBtn.addEventListener(\"click\", function (event) {\n  // Object that will be saved into localstorage\n  const dataObject = {\n    taskDate: Number(main.clickedDate),\n    taskMonth: main.state.month,\n    taskTitle: addTaskInput.value,\n  };\n\n  // Push object to the end of the main tasks array\n  main.tasks[main.tasks.length] = dataObject;\n\n  localStorage.setItem(\"tasks\", JSON.stringify(main.tasks));\n\n  backDrop.style.display = \"none\";\n  addTaskModal.style.display = \"none\";\n\n  // Clear input field\n  addTaskInput.value = \"\";\n\n  // Render the calendar with the new data\n  main.executeOrder();\n});\n\n///////////////////////////////////////////////\n// OPEN ADD TASK MODAL\n///////////////////////////////////////////////\n\nexport const openAddTask = function () {\n  backDrop.style.display = \"block\";\n  addTaskModal.style.display = \"flex\";\n  addTaskInput.focus();\n};\n\n///////////////////////////////////////////////\n// OPEN EDIT TASK MODAL\n///////////////////////////////////////////////\n\nexport const openEditTask = function () {\n  // Collects the entire markup to be attached when done\n  let markup = \"\";\n  // Counter for the task numbers when rendering dynamically\n  let i = 1;\n  // Get only the tasks for the day and month you clicked\n  const filtered = main.tasks.filter(\n    (task) =>\n      task.taskDate === Number(main.clickedDate) &&\n      task.taskMonth === main.state.month\n  );\n  // For each task of selected generate the html markup\n  filtered.forEach((task) => {\n    markup += `<div class=\"modal__task-container\">\n      <label class=\"modal__task-label--edit\" for=\"task\">Task ${i}:</label>\n      <input class=\"modal__task-input\" name=\"task\" type=\"text\" data-task=${i} value=\"${task.taskTitle}\" autocomplete=\"off\" maxlength=\"30\"\n      readonly>\n      <button class=\"edit-task-btn\" data-task=${i}>Edit</button>\n    </div>`;\n    i++;\n  });\n\n  editContainer.innerHTML = \"\";\n  editContainer.insertAdjacentHTML(\"afterbegin\", markup);\n\n  backDrop.style.display = \"block\";\n  editTaskModal.style.display = \"flex\";\n};\n\n///////////////////////////////////////////////\n// OPEN DELETE TASK MODAL\n///////////////////////////////////////////////\n\nexport const openDeleteTask = function () {\n  // Collects the entire markup to be attached when done\n  let markup = \"\";\n  // Counter for the task numbers when rendering dynamically\n  let i = 1;\n  // Get only the tasks for the day and month you clicked\n  const filtered = main.tasks.filter(\n    (task) =>\n      task.taskDate === Number(main.clickedDate) &&\n      task.taskMonth === main.state.month\n  );\n  // For each task of selected generate the html markup\n  filtered.forEach((task) => {\n    markup += `<div class=\"modal__task-container\">\n      <label class=\"modal__task-label--delete\" for=\"task\">Task ${i}:</label>\n      <input class=\"modal__task-input\" name=\"task\" type=\"text\" data-task=${i} value=\"${task.taskTitle}\" autocomplete=\"off\" maxlength=\"30\"\n      readonly>\n      <button class=\"delete-task-btn\" data-task=${i}>Delete</button>\n    </div>`;\n    i++;\n  });\n\n  deleteContainer.innerHTML = \"\";\n  deleteContainer.insertAdjacentHTML(\"afterbegin\", markup);\n\n  backDrop.style.display = \"block\";\n  deleteTaskModal.style.display = \"flex\";\n};\n\n///////////////////////////////////////////////\n// OPEN WEATHER MODAL\n///////////////////////////////////////////////\n\nconst weatherIMG = document.querySelector(\".weather__img\");\nconst weatherTemperature = document.querySelector(\".weather__temp\");\nconst weatherHumidity = document.querySelector(\".humidity__text\");\nconst weatherWind = document.querySelector(\".wind__text\");\n\nconst KEY = \"9b3d812c470e4cc4abf95058240901\";\n\nexport const openWeatherModal = async function () {\n  backDrop.style.display = \"block\";\n  weatherModal.style.display = \"flex\";\n\n  try {\n    weatherIMG.classList.add(\"spinner-class\");\n\n    const data = await weatherAPI(\"Inverness\");\n\n    if (!data) {\n      throw new Error(\"Something went wrong with the data!\");\n    }\n\n    // Apply the data to the markup elements\n    weatherIMG.classList.remove(\"spinner-class\");\n    weatherIMG.src = data.current.condition.icon;\n    weatherTemperature.textContent = `${data.current.temp_c}°C`;\n    weatherHumidity.textContent = `${data.current.humidity}%`;\n    weatherWind.textContent = `${data.current.wind_mph} mph`;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const weatherAPI = async function (location) {\n  try {\n    // Request data from weatherAPI\n    const apiJSON = await fetch(\n      `http://api.weatherapi.com/v1/current.json?key=${KEY}&q=${location}&aqi=no`\n    );\n\n    // Check if data has succesfully been retrieved\n    if (!apiJSON.ok) {\n      throw new Error(\"Network response was not OK\");\n    }\n\n    // Convert data from JSON format\n    const data = await apiJSON.json();\n\n    console.log(data);\n\n    return data;\n  } catch (error) {\n    // If something goes wrong crashes are caught here\n    console.error(\"Something went wrong here ...\");\n    console.error(error);\n  }\n};\n\n///////////////////////////////////////////////\n// OPEN PROFILE MODAL\n///////////////////////////////////////////////\n\nexport const openProfileModal = function () {\n  main.profile = JSON.parse(localStorage.getItem(\"profile\"));\n\n  if (localStorage.getItem(\"profile\")) {\n    usernameInput.placeholder = main.profile.username;\n    locationInput.placeholder = main.profile.location;\n  } else {\n    usernameInput.placeholder = \"Username\";\n    locationInput.placeholder = \"Location\";\n  }\n\n  backDrop.style.display = \"block\";\n  profileModal.style.display = \"flex\";\n};\n\n///////////////////////////////////////////////\n// PROFILE SAVE BUTTON\n///////////////////////////////////////////////\n\nprofileSaveBtn.addEventListener(\"click\", function () {\n  const dataObject = {\n    username:\n      localStorage.getItem(\"profile\") && usernameInput.value === \"\"\n        ? main.profile.username\n        : usernameInput.value,\n    location:\n      localStorage.getItem(\"profile\") && locationInput.value === \"\"\n        ? main.profile.location\n        : locationInput.value,\n  };\n\n  localStorage.setItem(\"profile\", JSON.stringify(dataObject));\n\n  main.renderProfile();\n\n  backDrop.style.display = \"none\";\n  profileModal.style.display = \"none\";\n\n  // Clear input field\n  usernameInput.value = \"\";\n  locationInput.value = \"\";\n});\n\n///////////////////////////////////////////////\n// CANCEL BUTTON\n///////////////////////////////////////////////\n\ncancelBtn.forEach((btn) => {\n  btn.addEventListener(\"click\", function () {\n    backDrop.style.display = \"none\";\n    addTaskModal.style.display = \"none\";\n    editTaskModal.style.display = \"none\";\n    deleteTaskModal.style.display = \"none\";\n    profileModal.style.display = \"none\";\n  });\n});\n\n///////////////////////////////////////////////\n// DONE BUTTON\n///////////////////////////////////////////////\n\ndoneBtn.forEach((btn) => {\n  btn.addEventListener(\"click\", function () {\n    backDrop.style.display = \"none\";\n    addTaskModal.style.display = \"none\";\n    editTaskModal.style.display = \"none\";\n    deleteTaskModal.style.display = \"none\";\n    // Render the calendar with the new data\n    main.executeOrder();\n  });\n});\n\n///////////////////////////////////////////////\n// OK BUTTON\n///////////////////////////////////////////////\n\nokBtn.addEventListener(\"click\", function () {\n  backDrop.style.display = \"none\";\n  weatherModal.style.display = \"none\";\n});\n"],"names":["$54b47fc030b7b21e$export$8ab225cdf6be8954","$fa7a60d60ed0fb7b$var$backDrop","document","querySelector","$fa7a60d60ed0fb7b$var$addTaskModal","$fa7a60d60ed0fb7b$var$editTaskModal","$fa7a60d60ed0fb7b$var$deleteTaskModal","$fa7a60d60ed0fb7b$var$weatherModal","$fa7a60d60ed0fb7b$var$profileModal","$fa7a60d60ed0fb7b$var$modalForm","$fa7a60d60ed0fb7b$var$addTaskInput","$fa7a60d60ed0fb7b$var$usernameInput","$fa7a60d60ed0fb7b$var$locationInput","$fa7a60d60ed0fb7b$var$editContainer","$fa7a60d60ed0fb7b$var$deleteContainer","$fa7a60d60ed0fb7b$var$saveBtn","$fa7a60d60ed0fb7b$var$profileSaveBtn","$fa7a60d60ed0fb7b$var$doneBtn","querySelectorAll","$fa7a60d60ed0fb7b$var$cancelBtn","$fa7a60d60ed0fb7b$var$okBtn","addEventListener","event","key","preventDefault","dataObject","taskDate","Number","taskMonth","$54b47fc030b7b21e$export$ca000e230c0caa3e","month","taskTitle","value","$54b47fc030b7b21e$export$7191f9b9098a3ea4","length","localStorage","setItem","JSON","stringify","style","display","$54b47fc030b7b21e$export$2062782c78489ae9","$fa7a60d60ed0fb7b$export$74fc2f5227cc41bd","focus","$fa7a60d60ed0fb7b$export$316cd9caae89eb91","markup","i","filtered","filter","task","forEach","innerHTML","insertAdjacentHTML","$fa7a60d60ed0fb7b$export$dc3d54406d71c4fb","$fa7a60d60ed0fb7b$var$weatherIMG","$fa7a60d60ed0fb7b$var$weatherTemperature","$fa7a60d60ed0fb7b$var$weatherHumidity","$fa7a60d60ed0fb7b$var$weatherWind","$fa7a60d60ed0fb7b$export$8bcf072155cf9156","classList","add","data","$fa7a60d60ed0fb7b$export$f4026f193782c6da","Error","remove","src","current","condition","icon","textContent","temp_c","humidity","wind_mph","error","console","location","apiJSON","fetch","ok","json","log","$fa7a60d60ed0fb7b$export$61e0beb31520f9bf","$54b47fc030b7b21e$export$4882ae973e0491e","parse","getItem","placeholder","username","$54b47fc030b7b21e$export$8482b82e7f2d1170","btn","$54b47fc030b7b21e$var$calendar","$54b47fc030b7b21e$var$monthYear","getElementById","$54b47fc030b7b21e$var$btnPrevious","$54b47fc030b7b21e$var$btnNext","$54b47fc030b7b21e$var$avatarEl","$54b47fc030b7b21e$var$usernameEl","$54b47fc030b7b21e$var$locationEl","$54b47fc030b7b21e$var$profileWeatherImg","$54b47fc030b7b21e$var$profileWeatherText","$54b47fc030b7b21e$var$weekdaysArray","$54b47fc030b7b21e$var$currentDate","Date","$54b47fc030b7b21e$var$originalDate","getDate","$54b47fc030b7b21e$var$getDate","day","getDay","getMonth","year","getFullYear","daysInMonth","firstDayOfMonth","dateString","toLocaleDateString","weekday","paddingDays","indexOf","split","$54b47fc030b7b21e$var$renderTaskTitle","line","$54b47fc030b7b21e$var$renderEditTaskBtn","some","$54b47fc030b7b21e$var$renderDeleteTaskBtn","$54b47fc030b7b21e$var$renderDates","$54b47fc030b7b21e$var$renderMonthYear","Intl","DateTimeFormat","format","$54b47fc030b7b21e$var$attachBtnHandler","$54b47fc030b7b21e$var$attachCheckBoxHandler","addTaskBtns","editTaskBtns","deleteTaskBtns","weatherBtns","target","closest","dataset","date","$54b47fc030b7b21e$var$editTaskHandler","$54b47fc030b7b21e$var$deleteTaskHandler","originalValue","newValue","taskInputs","input","hasAttribute","removeAttribute","mappedTasks","map","setAttribute","originalValueArray","item","push","filteredTasks","checkBox","taskLabel","box","checked","label","id","opacity","textDecoration","$54b47fc030b7b21e$var$addCheckedStatus","parentElement","nextElementSibling","status","$54b47fc030b7b21e$var$renderProfileWeather"],"version":3,"file":"index.8ba6935d.js.map"}